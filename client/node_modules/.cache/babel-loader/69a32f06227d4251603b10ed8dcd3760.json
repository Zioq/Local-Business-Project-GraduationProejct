{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/boilerplate-mern-stack-master (1)/react-shop-app/client/src/components/views/LandingPage/Sections/CheckBox.js\";\nimport React from \"react\";\nimport { Collapse, Checkbox } from \"antd\";\nconst {\n  Panel\n} = Collapse;\n\nfunction CheckBox(props) {\n  const [Checked, setChecked] = useState([]);\n\n  const handleToggle = value => {\n    //Find # of Index what user click\n    const currentIndex = Checked.indexOf(value);\n    const newChecked = [...Checked]; //Add state\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      // delete\n      newChecked.splice(currentIndex, 1);\n    }\n  };\n\n  const renderCheckLists = () => props.list && props.list.map((value, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    ohChange: () => handleToggle(value._id),\n    checked: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }\n  }, value.name)));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    defaultActiveKey: [\"1\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    header: \"This is panel header 1\",\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, renderCheckLists())));\n}\n\nexport default CheckBox;","map":{"version":3,"sources":["/Users/mac/Desktop/boilerplate-mern-stack-master (1)/react-shop-app/client/src/components/views/LandingPage/Sections/CheckBox.js"],"names":["React","Collapse","Checkbox","Panel","CheckBox","props","Checked","setChecked","useState","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","renderCheckLists","list","map","index","_id","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,MAAnC;AAGA,MAAM;AAACC,EAAAA;AAAD,IAAUF,QAAhB;;AAEA,SAASG,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B;AACA,UAAMC,YAAY,GAAGL,OAAO,CAACM,OAAR,CAAgBF,KAAhB,CAArB;AAEA,UAAMG,UAAU,GAAI,CAAC,GAAGP,OAAJ,CAApB,CAJ4B,CAM5B;;AACA,QAAGK,YAAY,KAAK,CAAC,CAArB,EAAwB;AACpBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;AACH,KAFD,MAEO;AAAE;AACLG,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACH;AACJ,GAZD;;AAeA,QAAMK,gBAAgB,GAAG,MAAMX,KAAK,CAACY,IAAN,IAAcZ,KAAK,CAACY,IAAN,CAAWC,GAAX,CAAe,CAACR,KAAD,EAAOS,KAAP,kBACxD,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,MAAMV,YAAY,CAACC,KAAK,CAACU,GAAP,CAAtC;AAAmD,IAAA,OAAO,EAAE,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADP,eAEW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOV,KAAK,CAACW,IAAb,CAFX,CADyC,CAA7C;;AAOF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,QAAD;AAAU,IAAA,gBAAgB,EAAE,CAAC,GAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAC,wBAAd;AAAuC,IAAA,GAAG,EAAC,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCL,gBAAgB,EADjB,CADF,CAFF,CADF;AAWD;;AAED,eAAeZ,QAAf","sourcesContent":["import React from \"react\";\nimport { Collapse, Checkbox } from \"antd\";\n\n\nconst {Panel} = Collapse;\n\nfunction CheckBox(props) {\n\n    const [Checked, setChecked] = useState([])\n\n    const handleToggle = (value) => {\n        //Find # of Index what user click\n        const currentIndex = Checked.indexOf(value)\n\n        const newChecked  = [...Checked]\n\n        //Add state\n        if(currentIndex === -1) {\n            newChecked.push(value)\n        } else { // delete\n            newChecked.splice(currentIndex, 1)\n        }\n    }\n\n\n    const renderCheckLists = () => props.list && props.list.map((value,index) => (\n        <React.Fragment key={index} >   \n               <Checkbox ohChange={() => handleToggle(value._id)} checked={false}/>\n                   <span>{value.name}</span>\n        </React.Fragment>\n    ))\n\n  return (\n    <div>\n\n      <Collapse defaultActiveKey={[\"1\"]} >\n        <Panel header=\"This is panel header 1\" key=\"1\">\n        {renderCheckLists()}\n      \n        </Panel>\n      </Collapse>\n    </div>\n  );\n}\n\nexport default CheckBox;\n"]},"metadata":{},"sourceType":"module"}