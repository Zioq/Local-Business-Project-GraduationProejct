{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/boilerplate-mern-stack-master (1)/react-shop-app/client/src/components/views/LandingPage/Sections/CheckBox.js\";\nimport React, { useState } from \"react\";\nimport { Collapse, Checkbox } from \"antd\";\nconst {\n  Panel\n} = Collapse;\n\nfunction CheckBox(props) {\n  const [Checked, setChecked] = useState([]);\n\n  const handleToggle = value => {\n    //Find # of Index what user click\n    const currentIndex = Checked.indexOf(value);\n    const newChecked = [...Checked];\n\n    if (currentIndex === -1) {\n      //Delete data\n      newChecked.push(value);\n    } else {\n      //Add state\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const renderCheckLists = () => props.list && props.list.map((value, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    ohChange: () => handleToggle(value._id),\n    checked: Checked.indexOf(value._id) === -1 ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }\n  }, value._id)));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    defaultActiveKey: [\"1\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    header: \"This is panel header 1\",\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, renderCheckLists())));\n}\n\nexport default CheckBox;","map":{"version":3,"sources":["/Users/mac/Desktop/boilerplate-mern-stack-master (1)/react-shop-app/client/src/components/views/LandingPage/Sections/CheckBox.js"],"names":["React","useState","Collapse","Checkbox","Panel","CheckBox","props","Checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","renderCheckLists","list","map","index","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,MAAnC;AAGA,MAAM;AAACC,EAAAA;AAAD,IAAUF,QAAhB;;AAEA,SAASG,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC5B;AACA,UAAMC,YAAY,GAAGJ,OAAO,CAACK,OAAR,CAAgBF,KAAhB,CAArB;AAEA,UAAMG,UAAU,GAAG,CAAC,GAAGN,OAAJ,CAAnB;;AAEA,QAAGI,YAAY,KAAK,CAAC,CAArB,EAAwB;AACpB;AACAE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;AACH,KAHD,MAGO;AACF;AACDG,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAA+B,CAA/B;AACH;;AAEDH,IAAAA,UAAU,CAACK,UAAD,CAAV;AAEH,GAhBD;;AAmBA,QAAMG,gBAAgB,GAAG,MAAMV,KAAK,CAACW,IAAN,IAAcX,KAAK,CAACW,IAAN,CAAWC,GAAX,CAAe,CAACR,KAAD,EAAOS,KAAP,kBACxD,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE,MAAMV,YAAY,CAACC,KAAK,CAACU,GAAP,CAAtC;AACA,IAAA,OAAO,EAAEb,OAAO,CAACK,OAAR,CAAgBF,KAAK,CAACU,GAAtB,MAA8B,CAAC,CAA/B,GAAmC,KAAnC,GAA2C,IADpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADP,eAGW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOV,KAAK,CAACU,GAAb,CAHX,CADyC,CAA7C;;AAQF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,QAAD;AAAU,IAAA,gBAAgB,EAAE,CAAC,GAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAC,wBAAd;AAAuC,IAAA,GAAG,EAAC,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCJ,gBAAgB,EADjB,CADF,CAFF,CADF;AAWD;;AAED,eAAeX,QAAf","sourcesContent":["import React, {useState} from \"react\";\nimport { Collapse, Checkbox } from \"antd\";\n\n\nconst {Panel} = Collapse;\n\nfunction CheckBox(props) {\n\n    const [Checked, setChecked] = useState([])\n\n    const handleToggle = (value) => {\n        //Find # of Index what user click\n        const currentIndex = Checked.indexOf(value)\n\n        const newChecked = [...Checked]\n\n        if(currentIndex === -1) {\n            //Delete data\n            newChecked.push(value)\n        } else {\n             //Add state\n            newChecked.splice(currentIndex,1);\n        }\n\n        setChecked(newChecked);\n    \n    }\n\n\n    const renderCheckLists = () => props.list && props.list.map((value,index) => (\n        <React.Fragment key={index} >   \n               <Checkbox ohChange={() => handleToggle(value._id)} \n               checked={Checked.indexOf(value._id)=== -1 ? false : true}/>\n                   <span>{value._id}</span>\n        </React.Fragment>\n    ))\n\n  return (\n    <div>\n\n      <Collapse defaultActiveKey={[\"1\"]} >\n        <Panel header=\"This is panel header 1\" key=\"1\">\n        {renderCheckLists()}\n      \n        </Panel>\n      </Collapse>\n    </div>\n  );\n}\n\nexport default CheckBox;\n"]},"metadata":{},"sourceType":"module"}