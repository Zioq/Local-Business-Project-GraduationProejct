{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/DOUGLAS FALL 2020/CSIS 4495 Applied  Research Project/Full_Stack_Project/frontend-app/src/components/ReservationPage/ReservationPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Input } from \"antd\";\n\nfunction ReservationPage() {\n  //Total Tables\n  const [totalTables, setTotalTables] = useState([]); //Customer's Table Selection\n\n  const [selection, setSelection] = useState({\n    table: {\n      name: null,\n      id: null\n    },\n    date: new Date(),\n    time: null,\n    location: \"Any Location\",\n    size: 0\n  }); //Customer's Reservation Details\n\n  const [booking, setBooking] = useState({\n    name: \"\",\n    phone: \"\",\n    email: \"\"\n  }); // Table Spot and Reservation Time\n\n  const [spots] = useState([\"Any Location\", \"Patio\", \"Bar\", \"Inside\"]);\n  const [times] = useState([\"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\"]); // Validation for Reservation Status\n\n  const [reservationError, setReservationError] = useState(false); // Date function\n\n  const getDate = () => {\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const date = months[selection.date.getMonth()] + \" \" + selection.date.getDate() + \" \" + selection.date.getFullYear();\n    let time = selection.time.slice(0, -2);\n    time = selection.time > 12 ? time + 12 + \":00\" : time + \":00\";\n    console.log(time);\n    const datetime = new Date(date + \" \" + time);\n    return datetime;\n  }; // Get Empty Tables\n\n\n  const getEmptyTables = () => {\n    let tables = totalTables.filter(table => table.isAvailable);\n    return tables.length;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Reservation Table\"));\n}\n\nexport default ReservationPage;","map":{"version":3,"sources":["/Users/mac/Desktop/DOUGLAS FALL 2020/CSIS 4495 Applied  Research Project/Full_Stack_Project/frontend-app/src/components/ReservationPage/ReservationPage.js"],"names":["React","useState","useEffect","Row","Col","Input","ReservationPage","totalTables","setTotalTables","selection","setSelection","table","name","id","date","Date","time","location","size","booking","setBooking","phone","email","spots","times","reservationError","setReservationError","getDate","months","getMonth","getFullYear","slice","console","log","datetime","getEmptyTables","tables","filter","isAvailable","length"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,GAAR,EAAYC,GAAZ,EAAgBC,KAAhB,QAA4B,MAA5B;;AAEA,SAASC,eAAT,GAA2B;AAEvB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C,CAHuB,CAKvB;;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC;AACvCU,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,IADD;AAELC,MAAAA,EAAE,EAAE;AAFC,KADgC;AAKvCC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,EALiC;AAMvCC,IAAAA,IAAI,EAAE,IANiC;AAOvCC,IAAAA,QAAQ,EAAE,cAP6B;AAQvCC,IAAAA,IAAI,EAAE;AARiC,GAAD,CAA1C,CANuB,CAiBvB;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC;AACnCW,IAAAA,IAAI,EAAE,EAD6B;AAEnCS,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,KAAK,EAAE;AAH4B,GAAD,CAAtC,CAlBuB,CAwBvB;;AACA,QAAM,CAACC,KAAD,IAAUtB,QAAQ,CAAC,CAAC,cAAD,EAAiB,OAAjB,EAA0B,KAA1B,EAAiC,QAAjC,CAAD,CAAxB;AACA,QAAM,CAACuB,KAAD,IAAUvB,QAAQ,CAAC,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAmC,SAAnC,EAA8C,SAA9C,CAAD,CAAxB,CA1BuB,CA4BvB;;AACA,QAAM,CAACwB,gBAAD,EAAmBC,mBAAnB,IAA0CzB,QAAQ,CAAC,KAAD,CAAxD,CA7BuB,CA+BvB;;AACA,QAAM0B,OAAO,GAAG,MAAM;AAClB,UAAMC,MAAM,GAAG,CACX,SADW,EAEX,UAFW,EAGX,OAHW,EAIX,OAJW,EAKX,KALW,EAMX,MANW,EAOX,MAPW,EAQX,QARW,EASX,WATW,EAUX,SAVW,EAWX,UAXW,EAYX,UAZW,CAAf;AAcE,UAAMd,IAAI,GACRc,MAAM,CAACnB,SAAS,CAACK,IAAV,CAAee,QAAf,EAAD,CAAN,GACA,GADA,GAEApB,SAAS,CAACK,IAAV,CAAea,OAAf,EAFA,GAGA,GAHA,GAIAlB,SAAS,CAACK,IAAV,CAAegB,WAAf,EALF;AAMA,QAAId,IAAI,GAAGP,SAAS,CAACO,IAAV,CAAee,KAAf,CAAqB,CAArB,EAAwB,CAAC,CAAzB,CAAX;AACAf,IAAAA,IAAI,GAAGP,SAAS,CAACO,IAAV,GAAiB,EAAjB,GAAsBA,IAAI,GAAG,EAAP,GAAY,KAAlC,GAA0CA,IAAI,GAAG,KAAxD;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACA,UAAMkB,QAAQ,GAAG,IAAInB,IAAJ,CAASD,IAAI,GAAG,GAAP,GAAaE,IAAtB,CAAjB;AACA,WAAOkB,QAAP;AACL,GA1BD,CAhCuB,CA4DvB;;;AACA,QAAMC,cAAc,GAAG,MAAM;AACzB,QAAIC,MAAM,GAAG7B,WAAW,CAAC8B,MAAZ,CAAmB1B,KAAK,IAAIA,KAAK,CAAC2B,WAAlC,CAAb;AACA,WAAOF,MAAM,CAACG,MAAd;AACH,GAHD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ;AAKH;;AAED,eAAejC,eAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Row,Col,Input} from \"antd\";\n\nfunction ReservationPage() {\n\n    //Total Tables\n    const [totalTables, setTotalTables] = useState([]);\n    \n    //Customer's Table Selection\n    const [selection, setSelection] = useState({\n        table: {\n          name: null,\n          id: null\n        },\n        date: new Date(),\n        time: null,\n        location: \"Any Location\",\n        size: 0\n      });\n\n    //Customer's Reservation Details\n    const [booking, setBooking] = useState({\n        name: \"\",\n        phone: \"\",\n        email: \"\",\n    });\n\n    // Table Spot and Reservation Time\n    const [spots] = useState([\"Any Location\", \"Patio\", \"Bar\", \"Inside\"]);\n    const [times] = useState([\"5:00 PM\", \"6:00 PM\", \"7:00 PM\" , \"8:00 PM\", \"9:00 PM\"]);\n\n    // Validation for Reservation Status\n    const [reservationError, setReservationError] = useState(false);\n\n    // Date function\n    const getDate = () => {\n        const months = [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\"\n          ];\n          const date =\n            months[selection.date.getMonth()] +\n            \" \" +\n            selection.date.getDate() +\n            \" \" +\n            selection.date.getFullYear();\n          let time = selection.time.slice(0, -2);\n          time = selection.time > 12 ? time + 12 + \":00\" : time + \":00\";\n          console.log(time);\n          const datetime = new Date(date + \" \" + time);\n          return datetime;\n    };\n\n    // Get Empty Tables\n    const getEmptyTables = () => {\n        let tables = totalTables.filter(table => table.isAvailable);\n        return tables.length;\n    };\n\n    return (\n        <div>\n            <p>Reservation Table</p>\n        </div>\n    )\n}\n\nexport default ReservationPage\n"]},"metadata":{},"sourceType":"module"}