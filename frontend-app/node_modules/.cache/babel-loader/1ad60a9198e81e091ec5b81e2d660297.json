{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/DOUGLAS FALL 2020/CSIS 4495 Applied  Research Project/Full_Stack_Project/frontend-app/src/components/Home/WeatherAPI.js\";\nimport React, { Component } from \"react\";\n\nclass WeatherAPI extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: \"\",\n      weather: \"\",\n      img: \"\"\n    };\n\n    this.getWeather = async () => {\n      console.log(\"check\"); //Set the Weather API\n\n      const openWeatherKey = \"fd3ee3aacf7b96f369c35f9b11b46187\";\n      const weatherUrl = \"https://api.openweathermap.org/data/2.5/weather\";\n\n      try {\n        const location = \"Vancouver\";\n        const urlToFetch = `${weatherUrl}?&q=${location}&APPID=${openWeatherKey}`; //Get the response\n\n        const response = await fetch(urlToFetch); // Check the status of response\n\n        if (response.ok) {\n          const jsonResponse = await response.json();\n          console.log(jsonResponse); //return jsonResponse;\n\n          console.log(jsonResponse.main.temp);\n          console.log(jsonResponse.weather[0].description);\n          this.setState({\n            temperature: jsonResponse.main.temp,\n            weather: jsonResponse.weather[0].description,\n            img: \"https://openweathermap.org/img/wn/\" + jsonResponse.weather[0].icon + \"@2x.png\"\n          });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.kelvinToCelsius = k => {\n      return (k - 273.15).toFixed(0);\n    };\n  }\n\n  componentDidMount() {\n    this.getWeather();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"This is weatherAPI component \"), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Today temperature: \", this.kelvinToCelsius(this.state.temperature)), \" \", `&deg`);\n  }\n\n}\n\nexport default WeatherAPI;","map":{"version":3,"sources":["/Users/mac/Desktop/DOUGLAS FALL 2020/CSIS 4495 Applied  Research Project/Full_Stack_Project/frontend-app/src/components/Home/WeatherAPI.js"],"names":["React","Component","WeatherAPI","state","temperature","weather","img","getWeather","console","log","openWeatherKey","weatherUrl","location","urlToFetch","response","fetch","ok","jsonResponse","json","main","temp","description","setState","icon","error","kelvinToCelsius","k","toFixed","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCE,KADiC,GACzB;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADyB;;AAAA,SAMjCC,UANiC,GAMpB,YAAY;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADuB,CAGvB;;AACA,YAAMC,cAAc,GAAG,kCAAvB;AACA,YAAMC,UAAU,GAAG,iDAAnB;;AAEA,UAAI;AACF,cAAMC,QAAQ,GAAG,WAAjB;AACA,cAAMC,UAAU,GAAI,GAAEF,UAAW,OAAMC,QAAS,UAASF,cAAe,EAAxE,CAFE,CAIF;;AACA,cAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,UAAD,CAA5B,CALE,CAMF;;AACA,YAAIC,QAAQ,CAACE,EAAb,EAAiB;AACf,gBAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA3B;AACAV,UAAAA,OAAO,CAACC,GAAR,CAAYQ,YAAZ,EAFe,CAGf;;AACAT,UAAAA,OAAO,CAACC,GAAR,CAAYQ,YAAY,CAACE,IAAb,CAAkBC,IAA9B;AACAZ,UAAAA,OAAO,CAACC,GAAR,CAAYQ,YAAY,CAACZ,OAAb,CAAqB,CAArB,EAAwBgB,WAApC;AACA,eAAKC,QAAL,CAAc;AACZlB,YAAAA,WAAW,EAAEa,YAAY,CAACE,IAAb,CAAkBC,IADnB;AAEZf,YAAAA,OAAO,EAAEY,YAAY,CAACZ,OAAb,CAAqB,CAArB,EAAwBgB,WAFrB;AAGZf,YAAAA,GAAG,EACD,uCACAW,YAAY,CAACZ,OAAb,CAAqB,CAArB,EAAwBkB,IADxB,GAEA;AANU,WAAd;AAQD;AACF,OAtBD,CAsBE,OAAOC,KAAP,EAAc;AACdhB,QAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACD;AACF,KAtCgC;;AAAA,SA4CjCC,eA5CiC,GA4CdC,CAAD,IAAO;AACvB,aAAO,CAACA,CAAC,GAAG,MAAL,EAAaC,OAAb,CAAqB,CAArB,CAAP;AACD,KA9CgC;AAAA;;AAwCjCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKrB,UAAL;AACD;;AAMDsB,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,eAEE;AAAK,MAAA,GAAG,EAAE,KAAK1B,KAAL,CAAWG,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAwB,KAAKmB,eAAL,CAAqB,KAAKtB,KAAL,CAAWC,WAAhC,CAAxB,CAHF,OAG+E,MAH/E,CADF;AAOD;;AAxDgC;;AA2DnC,eAAeF,UAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass WeatherAPI extends Component {\n  state = {\n    temperature: \"\",\n    weather: \"\",\n    img: \"\",\n  };\n  getWeather = async () => {\n    console.log(\"check\");\n\n    //Set the Weather API\n    const openWeatherKey = \"fd3ee3aacf7b96f369c35f9b11b46187\";\n    const weatherUrl = \"https://api.openweathermap.org/data/2.5/weather\";\n\n    try {\n      const location = \"Vancouver\";\n      const urlToFetch = `${weatherUrl}?&q=${location}&APPID=${openWeatherKey}`;\n\n      //Get the response\n      const response = await fetch(urlToFetch);\n      // Check the status of response\n      if (response.ok) {\n        const jsonResponse = await response.json();\n        console.log(jsonResponse);\n        //return jsonResponse;\n        console.log(jsonResponse.main.temp);\n        console.log(jsonResponse.weather[0].description);\n        this.setState({\n          temperature: jsonResponse.main.temp,\n          weather: jsonResponse.weather[0].description,\n          img:\n            \"https://openweathermap.org/img/wn/\" +\n            jsonResponse.weather[0].icon +\n            \"@2x.png\",\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  componentDidMount() {\n    this.getWeather();\n  }\n\n  kelvinToCelsius = (k) => {\n    return (k - 273.15).toFixed(0);\n  } \n\n  render() {\n    return (\n      <>\n        <h1>This is weatherAPI component </h1>\n        <img src={this.state.img} />\n        <h2>Today temperature: {this.kelvinToCelsius(this.state.temperature)}</h2> {`&deg`}\n      </>\n    );\n  }\n}\n\nexport default WeatherAPI;\n"]},"metadata":{},"sourceType":"module"}