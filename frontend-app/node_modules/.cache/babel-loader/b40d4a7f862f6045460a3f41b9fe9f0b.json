{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/DOUGLAS FALL 2020/CSIS 4495 Applied  Research Project/Full_Stack_Project/frontend-app/src/components/OrderListPage/OrderListPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Button } from \"antd\";\nimport \"./orderListPage.css\";\nimport EmployeeNavigation from \"../EmployeeNavigation\";\n\nfunction OrderListPage() {\n  const [OrdersList, setOrdersList] = useState([]); // get the order list Data\n\n  useEffect(() => {\n    fetchOrderList();\n  }, []);\n\n  const fetchOrderList = () => {\n    axios.post(\"/api/order/list\").then(response => {\n      if (response.data.success) {\n        console.log(response.data);\n        setOrdersList(response.data.info);\n      } else {\n        alert(\"Failed to get the response data \");\n      }\n    });\n  };\n\n  const confirmOrder = orderId => {\n    const body = {\n      _id: orderId\n    };\n    axios.post(\"/api/order/confirm\", body).then(response => {\n      if (response.data.success) {\n        console.log(response.data);\n        setOrderList(response.data.info);\n        fetchOrderList();\n        alert(\"Confirm the order successfully\");\n      } else {\n        alert(\"Failed to get the response data \");\n      }\n    });\n  };\n\n  const cancelOrder = OrderId => {\n    const body = {\n      orderId: OrderId\n    };\n    axios.post(\"/api/order/cancel\", body).then(response => {\n      if (response.data.success) {\n        console.log(response.data);\n        fetchOrderList();\n      } else {\n        alert(\"Failed to get the response data \");\n      }\n    });\n  };\n  /*   const renderTableBody = OrderList.map((order, index) => {\n      return (\n        <tr key={index}>\n          <td>{order.tableName}</td>\n          <td>{order.ItemName}</td>\n          <td>{order.numOfOrder}</td>\n          <td>\n            <Button type=\"primary\" onClick={() => confirmOrder(order._id)}>\n              Confirm the Order\n            </Button>\n          </td>\n          <td>\n            <Button type=\"danger\" onClick={() => cancelOrder(order._id)}>\n              Cancel the Order\n            </Button>\n          </td>\n        </tr>\n      );\n    }); */\n\n\n  const renderTableBody = OrdersList.map((order, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, order.tableName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, order.ItemName), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, order.numOfOrder), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => confirmOrder(order._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Confirm the Order\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: () => cancelOrder(order._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"Cancel the Order\")));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      margin: \"1rem auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeNavigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Check Orders Just Arrive!\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Go to customer and get last confirmation and click the `Confirmation` button\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Table Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Dish/Drink Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Number of Item\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Confirmation\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Cancelation\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, renderTableBody)));\n}\n\nexport default OrderListPage;","map":{"version":3,"sources":["/Users/mac/Desktop/DOUGLAS FALL 2020/CSIS 4495 Applied  Research Project/Full_Stack_Project/frontend-app/src/components/OrderListPage/OrderListPage.js"],"names":["React","useState","useEffect","axios","Button","EmployeeNavigation","OrderListPage","OrdersList","setOrdersList","fetchOrderList","post","then","response","data","success","console","log","info","alert","confirmOrder","orderId","body","_id","setOrderList","cancelOrder","OrderId","renderTableBody","map","order","index","tableName","ItemName","numOfOrder","width","margin","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Button } from \"antd\";\nimport \"./orderListPage.css\";\nimport EmployeeNavigation from \"../EmployeeNavigation\";\nfunction OrderListPage() {\n  const [OrdersList, setOrdersList] = useState([]);\n\n  // get the order list Data\n  useEffect(() => {\n    fetchOrderList();\n  }, []);\n\n  const fetchOrderList = () => {\n    axios.post(\"/api/order/list\").then((response) => {\n      if (response.data.success) {\n        console.log(response.data);\n        setOrdersList(response.data.info);\n      } else {\n        alert(\"Failed to get the response data \");\n      }\n    });\n  };\n\n  const confirmOrder = (orderId) => {\n    const body = {\n      _id: orderId,\n    };\n    axios.post(\"/api/order/confirm\", body).then((response) => {\n      if (response.data.success) {\n        console.log(response.data);\n        setOrderList(response.data.info);\n        fetchOrderList();\n        alert(\"Confirm the order successfully\");\n      } else {\n        alert(\"Failed to get the response data \");\n      }\n    });\n  };\n\n  const cancelOrder = (OrderId) => {\n    const body = {\n      orderId: OrderId,\n    };\n\n    axios.post(\"/api/order/cancel\", body).then((response) => {\n      if (response.data.success) {\n        console.log(response.data);\n        fetchOrderList();\n      } else {\n        alert(\"Failed to get the response data \");\n      }\n    });\n  };\n\n/*   const renderTableBody = OrderList.map((order, index) => {\n    return (\n      <tr key={index}>\n        <td>{order.tableName}</td>\n        <td>{order.ItemName}</td>\n        <td>{order.numOfOrder}</td>\n        <td>\n          <Button type=\"primary\" onClick={() => confirmOrder(order._id)}>\n            Confirm the Order\n          </Button>\n        </td>\n        <td>\n          <Button type=\"danger\" onClick={() => cancelOrder(order._id)}>\n            Cancel the Order\n          </Button>\n        </td>\n      </tr>\n    );\n  }); */\n  const renderTableBody = OrdersList.map((order, index) => {\n    return (\n      <tr key={index}>\n        <td>{order.tableName}</td>\n        <td>{order.ItemName}</td>\n        <td>{order.numOfOrder}</td>\n        <td>\n          <Button type=\"primary\" onClick={() => confirmOrder(order._id)}>\n            Confirm the Order\n          </Button>\n        </td>\n        <td>\n          <Button type=\"danger\" onClick={() => cancelOrder(order._id)}>\n            Cancel the Order\n          </Button>\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <div style={{ width: \"100%\", margin: \"1rem auto\" }}>\n      <EmployeeNavigation />\n      <div style={{ textAlign: \"center\" }}>\n        <h2>Check Orders Just Arrive!</h2>\n        <h5>\n          Go to customer and get last confirmation and click the `Confirmation`\n          button\n        </h5>\n        <br />\n      </div>\n\n      <table>\n        <thead>\n          <tr>\n            <th>Table Name</th>\n            <th>Dish/Drink Name</th>\n            <th>Number of Item</th>\n            <th>Confirmation</th>\n            <th>Cancelation</th>\n          </tr>\n        </thead>\n        <tbody>{renderTableBody}</tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default OrderListPage;\n"]},"metadata":{},"sourceType":"module"}