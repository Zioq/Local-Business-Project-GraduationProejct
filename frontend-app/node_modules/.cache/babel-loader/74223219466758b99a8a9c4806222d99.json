{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/DOUGLAS FALL 2020/CSIS 4495 Applied  Research Project/Full_Stack_Project/frontend-app/src/components/Home/WeatherAPI.js\";\n\nclass WeatherAPI extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: \"\",\n      weather: \"\",\n      img: \"\"\n    };\n\n    this.getWeather = async () => {\n      console.log(\"check\"); //Set the Weather API\n\n      const openWeatherKey = \"fd3ee3aacf7b96f369c35f9b11b46187\";\n      const weatherUrl = \"https://api.openweathermap.org/data/2.5/weather\";\n\n      try {\n        const location = \"Vancouver\";\n        const urlToFetch = `${weatherUrl}?&q=${location}&APPID=${openWeatherKey}`; //Get the response\n\n        const response = await fetch(urlToFetch); // Check the status of response\n\n        if (response.ok) {\n          const jsonResponse = await response.json();\n          console.log(jsonResponse); //return jsonResponse; \n\n          console.log(jsonResponse.main.temp);\n          console.log(jsonResponse.weather[0].description);\n          this.setState({\n            temperature: jsonResponse.main.temp,\n            weather: jsonResponse.weather[0].description,\n            img: \"https://openweathermap.org/img/wn/\" + jsonResponse.weather[0].icon + \"@2x.png\"\n          });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getWeather();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \"This is weatherAPI component \"), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default WeatherAPI;","map":{"version":3,"sources":["/Users/mac/Desktop/DOUGLAS FALL 2020/CSIS 4495 Applied  Research Project/Full_Stack_Project/frontend-app/src/components/Home/WeatherAPI.js"],"names":["WeatherAPI","Component","state","temperature","weather","img","getWeather","console","log","openWeatherKey","weatherUrl","location","urlToFetch","response","fetch","ok","jsonResponse","json","main","temp","description","setState","icon","error","componentDidMount","render"],"mappings":";;AAAA,MAAMA,UAAN,SAAyBC,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACJC,MAAAA,WAAW,EAAC,EADR;AAEJC,MAAAA,OAAO,EAAC,EAFJ;AAGJC,MAAAA,GAAG,EAAC;AAHA,KADuB;;AAAA,SAM7BC,UAN6B,GAMhB,YAAY;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADuB,CAGvB;;AACA,YAAMC,cAAc,GAAG,kCAAvB;AACA,YAAMC,UAAU,GAAG,iDAAnB;;AAEA,UAAI;AACF,cAAMC,QAAQ,GAAG,WAAjB;AACA,cAAMC,UAAU,GAAI,GAAEF,UAAW,OAAMC,QAAS,UAASF,cAAe,EAAxE,CAFE,CAIF;;AACA,cAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACF,UAAD,CAA5B,CALE,CAMF;;AACA,YAAGC,QAAQ,CAACE,EAAZ,EAAgB;AACZ,gBAAMC,YAAY,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAA3B;AACAV,UAAAA,OAAO,CAACC,GAAR,CAAYQ,YAAZ,EAFY,CAGZ;;AACAT,UAAAA,OAAO,CAACC,GAAR,CAAYQ,YAAY,CAACE,IAAb,CAAkBC,IAA9B;AACAZ,UAAAA,OAAO,CAACC,GAAR,CAAYQ,YAAY,CAACZ,OAAb,CAAqB,CAArB,EAAwBgB,WAApC;AACA,eAAKC,QAAL,CAAc;AACZlB,YAAAA,WAAW,EAAEa,YAAY,CAACE,IAAb,CAAkBC,IADnB;AAEZf,YAAAA,OAAO,EAAEY,YAAY,CAACZ,OAAb,CAAqB,CAArB,EAAwBgB,WAFrB;AAGZf,YAAAA,GAAG,EAAE,uCAAqCW,YAAY,CAACZ,OAAb,CAAqB,CAArB,EAAwBkB,IAA7D,GAAkE;AAH3D,WAAd;AAOH;AACF,OArBD,CAqBE,OAAOC,KAAP,EAAc;AACdhB,QAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACD;AACF,KArC4B;AAAA;;AAuC7BC,EAAAA,iBAAiB,GAAG;AAClB,SAAKlB,UAAL;AACD;;AAEHmB,EAAAA,MAAM,GAAG;AACL,wBACI,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADA,eAEA;AAAK,MAAA,GAAG,EAAE,KAAKvB,KAAL,CAAWG,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADJ;AAMH;;AAlD8B;;AAqDnC,eAAeL,UAAf","sourcesContent":["class WeatherAPI extends Component {\n    state = {\n        temperature:\"\",\n        weather:\"\",\n        img:\"\"\n      };\n      getWeather = async () => {\n        console.log(\"check\");\n    \n        //Set the Weather API\n        const openWeatherKey = \"fd3ee3aacf7b96f369c35f9b11b46187\";\n        const weatherUrl = \"https://api.openweathermap.org/data/2.5/weather\";\n    \n        try {\n          const location = \"Vancouver\";\n          const urlToFetch = `${weatherUrl}?&q=${location}&APPID=${openWeatherKey}`;\n    \n          //Get the response\n          const response = await fetch(urlToFetch);\n          // Check the status of response\n          if(response.ok) {\n              const jsonResponse = await response.json();\n              console.log(jsonResponse);\n              //return jsonResponse; \n              console.log(jsonResponse.main.temp);\n              console.log(jsonResponse.weather[0].description);\n              this.setState({\n                temperature: jsonResponse.main.temp, \n                weather: jsonResponse.weather[0].description,\n                img: \"https://openweathermap.org/img/wn/\"+jsonResponse.weather[0].icon+\"@2x.png\"\n              });\n    \n              \n          }\n        } catch (error) {\n          console.log(error);\n        }\n      };\n    \n      componentDidMount() {\n        this.getWeather();\n      }\n    \n    render() { \n        return ( \n            <>\n            <h1>This is weatherAPI component </h1>\n            <img src={this.state.img} />\n            </>\n         );\n    }\n}\n \nexport default WeatherAPI;"]},"metadata":{},"sourceType":"module"}