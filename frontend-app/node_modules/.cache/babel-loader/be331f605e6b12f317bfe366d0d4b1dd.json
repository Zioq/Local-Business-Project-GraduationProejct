{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/DOUGLAS FALL 2020/CSIS 4495 Applied  Research Project/Full_Stack_Project/frontend-app/src/components/TableRegisterPage/TableRegisterPage.js\";\nimport React, { useState } from \"react\";\nimport { Typography, Button, Form, Input, Radio } from 'antd';\nimport FileUpload from '../Utils/FileUpload';\nimport axios from \"axios\";\nconst {\n  Title\n} = Typography;\nconst {\n  TextArea\n} = Input;\nconst Location = [{\n  key: 1,\n  value: \"Patio\"\n}, {\n  key: 2,\n  value: \"Bar\"\n}, {\n  key: 3,\n  value: \"Inside\"\n}];\n\nfunction UploadTablePage(props) {\n  const [TableName, setTableName] = useState(\"\");\n  const [DescriptionValue, setDescriptionValue] = useState(\"\");\n  const [Time, setTime] = useState(0);\n  const [Images, setImages] = useState([]);\n  const [LocationValue, setLocationValue] = useState(1);\n  const [Reservation, setReservation] = useState(false);\n\n  const onTableChange = event => {\n    setTableName(event.currentTarget.value);\n  };\n\n  const onDescriptionChange = event => {\n    setDescriptionValue(event.currentTarget.value);\n  };\n\n  const onTimeChange = event => {\n    setTime(event.currentTarget.value);\n  };\n\n  const updateImages = newImages => {\n    setImages(newImages);\n  };\n\n  const handleChange = event => {\n    setLocationValue(event.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (!TableName || !DescriptionValue || !Time || !Images || !LocationValue) {\n      return alert(\"Please fill up all info\");\n    } // Send fillled out data to server by request\n\n\n    const body = {\n      tableName: TableName,\n      description: DescriptionValue,\n      time: Time,\n      images: Images,\n      location: LocationValue,\n      reservation: Reservation\n    };\n    axios.post(\"/api/table\", body).then(response => {\n      if (response.data.success) {\n        console.log(response.data);\n        alert(\"Table setting Success\");\n        props.history.push(\"/AdminHome\");\n      } else {\n        alert(\"Upload Failed\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: '700px',\n      margin: '2rem auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Add New Table Location\")), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileUpload, {\n    refreshFunction: updateImages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Table Name\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: onTableChange,\n    value: TableName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(TextArea, {\n    onChange: onDescriptionChange,\n    value: DescriptionValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Time setting (Pm)\"), /*#__PURE__*/React.createElement(Input, {\n    onChange: onTimeChange,\n    value: Time,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Table Location\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Radio.Group, {\n    onChange: handleChange,\n    value: LocationValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, Location.map(spot => /*#__PURE__*/React.createElement(Radio, {\n    key: spot.key,\n    value: spot.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, \" \", spot.value))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Submit\")));\n}\n\nexport default UploadTablePage;","map":{"version":3,"sources":["/Users/mac/Desktop/DOUGLAS FALL 2020/CSIS 4495 Applied  Research Project/Full_Stack_Project/frontend-app/src/components/TableRegisterPage/TableRegisterPage.js"],"names":["React","useState","Typography","Button","Form","Input","Radio","FileUpload","axios","Title","TextArea","Location","key","value","UploadTablePage","props","TableName","setTableName","DescriptionValue","setDescriptionValue","Time","setTime","Images","setImages","LocationValue","setLocationValue","Reservation","setReservation","onTableChange","event","currentTarget","onDescriptionChange","onTimeChange","updateImages","newImages","handleChange","target","submitHandler","preventDefault","alert","body","tableName","description","time","images","location","reservation","post","then","response","data","success","console","log","history","push","maxWidth","margin","textAlign","marginBottom","map","spot"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,UAAR,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAwCC,KAAxC,QAAoD,MAApD;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,KAAP,MAAmB,OAAnB;AAEA,MAAM;AAACC,EAAAA;AAAD,IAAUP,UAAhB;AACA,MAAM;AAACQ,EAAAA;AAAD,IAAaL,KAAnB;AAEA,MAAMM,QAAQ,GAAG,CACf;AAAEC,EAAAA,GAAG,EAAE,CAAP;AAAUC,EAAAA,KAAK,EAAE;AAAjB,CADe,EAEf;AAAED,EAAAA,GAAG,EAAE,CAAP;AAAUC,EAAAA,KAAK,EAAE;AAAjB,CAFe,EAGf;AAAED,EAAAA,GAAG,EAAE,CAAP;AAAUC,EAAAA,KAAK,EAAE;AAAjB,CAHe,CAAjB;;AAMA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAG9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiB,gBAAD,EAAmBC,mBAAnB,IAA0ClB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACmB,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACqB,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACuB,aAAD,EAAeC,gBAAf,IAAmCxB,QAAQ,CAAC,CAAD,CAAjD;AACA,QAAM,CAACyB,WAAD,EAAaC,cAAb,IAA+B1B,QAAQ,CAAC,KAAD,CAA7C;;AAGA,QAAM2B,aAAa,GAAIC,KAAD,IAAW;AAC/BZ,IAAAA,YAAY,CAACY,KAAK,CAACC,aAAN,CAAoBjB,KAArB,CAAZ;AACD,GAFD;;AAIA,QAAMkB,mBAAmB,GAAIF,KAAD,IAAW;AACrCV,IAAAA,mBAAmB,CAACU,KAAK,CAACC,aAAN,CAAoBjB,KAArB,CAAnB;AACD,GAFD;;AAIA,QAAMmB,YAAY,GAAIH,KAAD,IAAW;AAC9BR,IAAAA,OAAO,CAACQ,KAAK,CAACC,aAAN,CAAoBjB,KAArB,CAAP;AACD,GAFD;;AAKA,QAAMoB,YAAY,GAAIC,SAAD,IAAe;AAClCX,IAAAA,SAAS,CAACW,SAAD,CAAT;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAIN,KAAD,IAAW;AAC9BJ,IAAAA,gBAAgB,CAACI,KAAK,CAACO,MAAN,CAAavB,KAAd,CAAhB;AACD,GAFD;;AAIA,QAAMwB,aAAa,GAAIR,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACS,cAAN;;AAEA,QAAG,CAACtB,SAAD,IAAa,CAACE,gBAAd,IAAkC,CAACE,IAAnC,IAA2C,CAACE,MAA5C,IAAsD,CAACE,aAA1D,EAAyE;AACvE,aAAOe,KAAK,CAAC,yBAAD,CAAZ;AACD,KAL8B,CAO/B;;;AACA,UAAMC,IAAI,GAAG;AAEXC,MAAAA,SAAS,EAAEzB,SAFA;AAGX0B,MAAAA,WAAW,EAAExB,gBAHF;AAIXyB,MAAAA,IAAI,EAAEvB,IAJK;AAKXwB,MAAAA,MAAM,EAAEtB,MALG;AAMXuB,MAAAA,QAAQ,EAAErB,aANC;AAOXsB,MAAAA,WAAW,EAAEpB;AAPF,KAAb;AAUAlB,IAAAA,KAAK,CAACuC,IAAN,CAAW,YAAX,EAAwBP,IAAxB,EACMQ,IADN,CACWC,QAAQ,IAAI;AAChB,UAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,EAA0B;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAArB;AACAX,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACAxB,QAAAA,KAAK,CAACuC,OAAN,CAAcC,IAAd,CAAmB,YAAnB;AACD,OAJD,MAIO;AACLhB,QAAAA,KAAK,CAAC,eAAD,CAAL;AACD;AACF,KATN;AAUD,GA5BD;;AAgCA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEiB,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,MAAM,EAAE;AAA7B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,YAAY,EAAE;AAArC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CADJ,eAMI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEtB,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,UAAD;AAAY,IAAA,eAAe,EAAEJ,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI,oBAAC,KAAD;AACI,IAAA,QAAQ,EAAEL,aADd;AAEI,IAAA,KAAK,EAAEZ,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAdJ,eAeI,oBAAC,QAAD;AACI,IAAA,QAAQ,EAAEe,mBADd;AAEI,IAAA,KAAK,EAAEb,gBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBArBJ,eAsBI,oBAAC,KAAD;AACI,IAAA,QAAQ,EAAEc,YADd;AAEI,IAAA,KAAK,EAAEZ,IAFX;AAGI,IAAA,IAAI,EAAC,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,eA2BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BJ,eA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA7BJ,eA8BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BJ,eA+BI,oBAAC,KAAD,CAAO,KAAP;AAAa,IAAA,QAAQ,EAAEe,YAAvB;AAAqC,IAAA,KAAK,EAAEX,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACOb,QAAQ,CAACiD,GAAT,CAAaC,IAAI,iBAChB,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,IAAI,CAACjD,GAAjB;AAAsB,IAAA,KAAK,EAAEiD,IAAI,CAACjD,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAyCiD,IAAI,CAAChD,KAA9C,CADD,CADP,CA/BJ,eAqCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArCJ,eAsCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtCJ,eAuCI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEwB,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvCJ,CANJ,CADF;AAsDD;;AAED,eAAevB,eAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {Typography, Button, Form, Input,Radio} from 'antd';\nimport FileUpload from '../Utils/FileUpload';\nimport axios  from \"axios\";\n\nconst {Title} = Typography;\nconst {TextArea} = Input;\n\nconst Location = [\n  { key: 1, value: \"Patio\" },\n  { key: 2, value: \"Bar\" },\n  { key: 3, value: \"Inside\" },\n];\n\nfunction UploadTablePage(props) {\n\n\n  const [TableName, setTableName] = useState(\"\");\n  const [DescriptionValue, setDescriptionValue] = useState(\"\");\n  const [Time, setTime] = useState(0);\n  const [Images, setImages] = useState([]);\n  const [LocationValue,setLocationValue] = useState(1);\n  const [Reservation,setReservation] = useState(false);\n\n\n  const onTableChange = (event) => {\n    setTableName(event.currentTarget.value);\n  };\n\n  const onDescriptionChange = (event) => {\n    setDescriptionValue(event.currentTarget.value);\n  };\n\n  const onTimeChange = (event) => {\n    setTime(event.currentTarget.value);\n  };\n\n\n  const updateImages = (newImages) => {\n    setImages(newImages);\n  }\n\n  const handleChange = (event) => {\n    setLocationValue(event.target.value);\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    if(!TableName ||!DescriptionValue || !Time || !Images || !LocationValue) {\n      return alert(\"Please fill up all info\");\n    }\n\n    // Send fillled out data to server by request\n    const body = {\n\n      tableName: TableName,\n      description: DescriptionValue,\n      time: Time,\n      images: Images,\n      location: LocationValue,\n      reservation: Reservation\n    };\n\n    axios.post(\"/api/table\",body)\n         .then(response => {\n           if(response.data.success) {\n             console.log(response.data);\n             alert(\"Table setting Success\");\n             props.history.push(\"/AdminHome\");\n           } else {\n             alert(\"Upload Failed\");\n           }\n         });\n  };\n\n\n\n  return (\n    <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n        <div style={{ textAlign: 'center', marginBottom: '2rem' }}>\n            <Title level={2}>Add New Table Location</Title>\n        </div>\n\n\n        <Form onSubmit={submitHandler} >\n\n            {/* DropZone */}\n            <FileUpload refreshFunction={updateImages}/>\n         \n            <br />\n\n            <label>Table Name</label>\n            <Input\n                onChange={onTableChange}\n                value={TableName}\n            />\n            <br />\n\n            <label>Description</label>\n            <TextArea\n                onChange={onDescriptionChange}\n                value={DescriptionValue}\n            />\n            <br />\n\n            <label>Time setting (Pm)</label>\n            <Input\n                onChange={onTimeChange}\n                value={Time}\n                type=\"number\"\n            />\n            <br />\n\n            <label>Table Location</label>\n            <br />\n            <Radio.Group onChange={handleChange} value={LocationValue}>\n                  {Location.map(spot=>(\n                    <Radio key={spot.key} value={spot.key}> {spot.value}</Radio>\n                  ))}\n            </Radio.Group>\n         \n            <br />\n            <br />\n            <Button onClick={submitHandler}>\n                Submit\n            </Button>\n\n        </Form>\n\n    </div>\n)\n}\n\nexport default UploadTablePage;\n"]},"metadata":{},"sourceType":"module"}