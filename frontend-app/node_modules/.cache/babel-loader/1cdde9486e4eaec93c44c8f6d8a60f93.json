{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/DOUGLAS FALL 2020/CSIS 4495 Applied  Research Project/Full_Stack_Project/frontend-app/src/components/Main.js\";\nimport React, { useEffect } from 'react';\nimport Jumbotron from \"./Jumbotron\";\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst recognition = new SpeechRecognition();\nrecognition.start();\n\nfunction Main() {\n  const voiceCommands = () => {\n    // On start\n    recognition.onstart = () => {\n      console.log('Voice is actived');\n    }; // Recognize the voice\n\n\n    recognition.onresult = e => {\n      let current = e.resultIndex;\n      let userVoice = e.results[current][0].transcript;\n      console.log(userVoice);\n\n      if (userVoice === \"go home\") {\n        goToHome();\n      } else if (userVoice === \"reservation\") {\n        goToReservation();\n      } else if (userVoice === \"table\") {\n        goToTable();\n      } else {\n        alert(\"Sorry, we are not support other voice instructions Sorry for your inconvenience ðŸ¤—\");\n      }\n    };\n  };\n\n  function goToHome() {\n    window.location = \"http://localhost:3000/Home\";\n  }\n\n  function goToReservation() {\n    window.location = \"http://localhost:3000/Reservation\";\n  }\n\n  function goToTable() {\n    window.location = \"http://localhost:3000/Table\";\n  }\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      voiceCommands();\n    }, 5000);\n    return () => clearInterval(interval);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \" Welcome to Guu Garden! :)\"), /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/mac/Desktop/DOUGLAS FALL 2020/CSIS 4495 Applied  Research Project/Full_Stack_Project/frontend-app/src/components/Main.js"],"names":["React","useEffect","Jumbotron","SpeechRecognition","window","webkitSpeechRecognition","recognition","start","Main","voiceCommands","onstart","console","log","onresult","e","current","resultIndex","userVoice","results","transcript","goToHome","goToReservation","goToTable","alert","location","interval","setInterval","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,MAAMC,iBAAiB,GAAGC,MAAM,CAACD,iBAAP,IAA4BC,MAAM,CAACC,uBAA7D;AACA,MAAMC,WAAW,GAAG,IAAIH,iBAAJ,EAApB;AACAG,WAAW,CAACC,KAAZ;;AAEA,SAASC,IAAT,GAAgB;AACZ,QAAMC,aAAa,GAAG,MAAM;AACxB;AACAH,IAAAA,WAAW,CAACI,OAAZ,GAAsB,MAAM;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,KAFD,CAFwB,CAKvB;;;AACHN,IAAAA,WAAW,CAACO,QAAZ,GAAwBC,CAAD,IAAO;AAC5B,UAAIC,OAAO,GAAGD,CAAC,CAACE,WAAhB;AACA,UAAIC,SAAS,GAAGH,CAAC,CAACI,OAAF,CAAUH,OAAV,EAAmB,CAAnB,EAAsBI,UAAtC;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYK,SAAZ;;AAEA,UAAGA,SAAS,KAAK,SAAjB,EAA4B;AACxBG,QAAAA,QAAQ;AACX,OAFD,MAEO,IAAGH,SAAS,KAAK,aAAjB,EAAgC;AACnCI,QAAAA,eAAe;AAClB,OAFM,MAEA,IAAGJ,SAAS,KAAK,OAAjB,EAA0B;AAC7BK,QAAAA,SAAS;AACZ,OAFM,MAEA;AACHC,QAAAA,KAAK,CAAC,oFAAD,CAAL;AACH;AACJ,KAdC;AAgBC,GAtBH;;AA0BE,WAASH,QAAT,GAAoB;AAChBhB,IAAAA,MAAM,CAACoB,QAAP,GAAiB,4BAAjB;AACH;;AACD,WAASH,eAAT,GAA2B;AACzBjB,IAAAA,MAAM,CAACoB,QAAP,GAAiB,mCAAjB;AACD;;AAED,WAASF,SAAT,GAAqB;AACnBlB,IAAAA,MAAM,CAACoB,QAAP,GAAiB,6BAAjB;AACD;;AAEDvB,EAAAA,SAAS,CAAC,MAAK;AACV,UAAMwB,QAAQ,GAAGC,WAAW,CAAC,MAAK;AACjCjB,MAAAA,aAAa;AACb,KAF2B,EAE1B,IAF0B,CAA5B;AAGA,WAAM,MAAMkB,aAAa,CAACF,QAAD,CAAzB;AACJ,GALQ,CAAT;AAQF,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ;AASH;;AAED,eAAejB,IAAf","sourcesContent":["import React ,{useEffect}from 'react';\nimport Jumbotron from \"./Jumbotron\";\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst recognition = new SpeechRecognition();\nrecognition.start();\n\nfunction Main() {\n    const voiceCommands = () => {\n        // On start\n        recognition.onstart = () => {\n          console.log('Voice is actived');\n        };\n         // Recognize the voice\n      recognition.onresult = (e) => {\n        let current = e.resultIndex;\n        let userVoice = e.results[current][0].transcript;\n        console.log(userVoice);\n      \n        if(userVoice === \"go home\") {\n            goToHome();\n        } else if(userVoice === \"reservation\") {\n            goToReservation();\n        } else if(userVoice === \"table\") {\n            goToTable();\n        } else {\n            alert(\"Sorry, we are not support other voice instructions Sorry for your inconvenience ðŸ¤—\");\n        }\n    };\n\n      }\n      \n     \n\n      function goToHome() {\n          window.location =\"http://localhost:3000/Home\";\n      }\n      function goToReservation() {\n        window.location =\"http://localhost:3000/Reservation\";\n      }\n\n      function goToTable() {\n        window.location =\"http://localhost:3000/Table\";\n      }\n       \n      useEffect(()=> {\n           const interval = setInterval(()=> {\n            voiceCommands();\n           },5000);\n           return() => clearInterval(interval);\n      });\n     \n\n    return (\n       \n        <div>\n            <h1> Welcome to Guu Garden! :)</h1>\n            <Jumbotron />\n            \n        </div>\n\n    )\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}